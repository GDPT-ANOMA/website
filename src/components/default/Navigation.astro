---
import { Image } from "astro:assets";
import navigationTabs from "../../data/navigationTabs.json";

// Add this to get the current path
const currentPath = Astro.url.pathname;
---

<div class="flex justify-center sticky top-4 z-50">
    <div
        id="mobile-menu-container"
        class="flex flex-col mx-2 rounded-[36rem] max-h-[80px] min-h-[80px] px-6 w-full transition-all duration-300 ease-in-out overflow-hidden border-neutral-700 border backdrop-blur-md"
    >
        <div
            class="flex items-center justify-between sticky lg:top-4 top-2 w-full"
        >
            <div class="flex items-center gap-4">
                <Image
                    src="/logos/gdpt.svg"
                    alt="GĐPT Anôma"
                    width={50}
                    height={50}
                    class=""
                />
                <span class="text-textColor text-2xl font-bold">GDPT ANÔMA</span
                >
            </div>
            <div class="items-center gap-6 hidden lg:flex">
                {
                    navigationTabs.map((tab) => (
                        <a
                            href={tab.url}
                            class={`text-lg font-bold ${
                                currentPath === tab.url
                                    ? "text-gdpt"
                                    : "text-textColor hover:text-neutral-400"
                            }`}
                        >
                            {tab.name}
                        </a>
                    ))
                }
            </div>
            <div class="lg:hidden flex items-center mt-1">
                <button
                    class="hamburger hamburger--collapse"
                    color="#FFFFFF"
                    type="button"
                >
                    <span class="hamburger-box">
                        <span class="hamburger-inner"></span>
                    </span>
                </button>
            </div>
        </div>
        <div
            id="mobile-menu"
            class="flex-col items-center gap-4 mt-4 space-y-4 hidden lg:hidden mb-4"
        >
            {
                navigationTabs.map((tab) => (
                    <a
                        href={tab.url}
                        class={`text-lg font-bold ${
                            currentPath === tab.url
                                ? "text-gdpt"
                                : "text-textColor"
                        }`}
                    >
                        {tab.name}
                    </a>
                ))
            }
        </div>
    </div>
</div>

<script>
    const hamburger = document.querySelector(".hamburger");
    const mobileMenu = document.getElementById("mobile-menu");
    const menuContainer = document.getElementById("mobile-menu-container");

    if (hamburger && mobileMenu && menuContainer) {
        hamburger.addEventListener("click", function () {
            hamburger.classList.toggle("is-active");

            if (mobileMenu.classList.contains("hidden")) {
                mobileMenu.classList.remove("hidden");
                mobileMenu.classList.add("flex");
                menuContainer.style.maxHeight = "500px"; // Adjust this value for your expanded menu height
            } else {
                menuContainer.style.maxHeight = "80px"; // Original height of the menu
                setTimeout(() => {
                    mobileMenu.classList.add("hidden");
                    mobileMenu.classList.remove("flex");
                }, 300); // Matches the duration of the CSS transition
            }
        });
    }
</script>

<style>
    #mobile-menu-container {
        align-items: center;
        border-radius: 36px; /* Ensure the border radius stays consistent */
        transition:
            max-height 0.3s ease-in-out,
            border-radius 0.3s ease-in-out;
    }
</style>
